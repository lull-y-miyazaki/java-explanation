/**
 * 【問題12】
 * 予め与えられた配列 ary をソートするプログラムを作成してください。
 * なお、ソートのアルゴリズムは選択法または挿入法で実施してください。
 */

public class Sort {
	public static void main(String[] args) {

		// 配列をint型の変数aryに入れる
		int[] ary = { 20, 2, 15, 9, 64, 30, 22, 90, 50 };

		// ~~~~~~~~~~~~　選択法　~~~~~~~~~~~~
		// ①値を比べるためのループ(変数iは現状の最小値として仮定した位置)
		// -1をしている理由：最終的に最後の数は自動的に正しい位置になるため、処理が不要だから
		for (int i = 0; i < ary.length - 1; i++) {

			// int型の変数minに変数iを格納（min = ary[i]番目が現状の最小値の位置）
			int min = i;

			// ②最小値を探すためのループ(変数jは最小値の次の値を表す)
			for (int j = i + 1; j < ary.length; j++) {

				// ③最小値の次の値(j=ary[i]+1)と現状の最小値（min=ary[i]）を比べていく
				if (ary[j] < ary[min]) {

					// 現状の最小値より変数jの方が小さかったら変数minに値を格納(※①の変数minとは別個体の変数)
					min = j;
				}
			}

			// ④最小値を入れ替える
			// ※ary[i]=ary[min]で直接代入すると元々ary[i]に格納していた値が上書きされ消えてしまう
			int temp = ary[i]; // 現状の最小値を一時的に変数tempに保存(例：20)
			ary[i] = ary[min];// 比較して見つけてきた最小値を変数iに保存(最小値は2になる)
			ary[min] = temp;// 変数minに一時的に保存しておいた20を入れる
		}

		// 画面に出力させる
		System.out.println("aryのソート結果");
		// 拡張for文を使い、変数aryの値を1つずつint型の変数numに格納していく
		for (int num : ary) {
			// 変数numを画面に出力させる
			System.out.print(num + " ");
		}

		// ~~~~~~~~~~~~　挿入方法　~~~~~~~~~~~~
		System.out.println();
		// ①値を比べるためのループ(変数iは現状の最小値として仮定した位置)
		for (int i = 1; i < ary.length; i++) {
			// 基準とする値を変数keyに格納
			int key = ary[i];
			// 変数jに変数keyの1つ前の値を格納
			int j = i - 1;
			// ②変数jが0以上かつ、変数keyが左側の値よりも小さい間はループ（このループで大きい値の位置を決めていく）
			// 【j >= 0】 左端まで見るための処理（j=-1になったらfalseになりループ終了）
			// 【ary[j] > key】 keyより大きい要素は右にずらすために比較する処理(keyのほうが大きい場合はfalseになりループ終了)
			while (j >= 0 && ary[j] > key) {

				// 変数keyより大きかった値を右にずらす処理
				ary[j + 1] = ary[j];

				// さらに左の値を確認するため、変数jを-1していく
				j--;
			}

			// ④変数keyを正しい位置に代入(【ary[j + 1]】１を足すことで、右にずらして空いた場所の値を指定できる)
			ary[j + 1] = key;
		}

		// 画面に出力させる
		System.out.println("aryのソート結果");

		// 拡張for文を使い、変数aryの値を1つずつint型の変数numに格納していく
		for (int num : ary) {

			// 変数numを画面に出力させる
			System.out.print(num + " ");
		}
	}

}

/**
 * 補足：

~~~~~~~~~~~~　選択法(配列の要素を順番に見ていき、要素を最小値と入れ替え整列させる)　~~~~~~~~~~~~
①のループ1回目　i=0 min= ary[0] (現状の最小値：20)
		②のループ1回目　j=1
				③if(2 < 20) min=ary[1]
		②のループ2回目　j=2
				③if(15 < 2) min=ary[1]
		...
		②のループn回目　配列の数だけループ
				③if(50 < 2) min=ary[1]
	④temp = ary[0](例:20), ary[i] = ary[1](例:2), ary[min] = ary[0](例:20)
	int[] ary = { 2, 20, 15, 9, 64, 30, 22, 90, 50 };

①のループ2回目　i=1 min= ary[1] (現状の最小値：20)
		②のループ1回目　j=2
				③if(15 < 20) min=ary[2]
		②のループ2回目　j=3
				③if(9 < 15) min=ary[3]
		...
		②のループn回目　配列の数だけループ
				③if(50 < 15) min=ary[3]
	④temp = ary[1](例:20), ary[i] = ary[3](例:15), ary[min] = ary[1](例:20)
	int[] ary = { 2, 15, 20, 9, 64, 30, 22, 90, 50 };
...

 */